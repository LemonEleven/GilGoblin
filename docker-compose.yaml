version: "3.7"

name: gilgoblin

services:
  gilgoblin-database:
    image: nickreinlein/gilgoblin-database
    container_name: database
    environment:
      POSTGRES_DB: gilgoblin
      POSTGRES_USER: gilgoblin
      POSTGRES_PASSWORD: gilgoblin
      PGUSER: gilgoblin
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gilgoblin
    ports:
      - "5432:5432"
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
    volumes:
      - ./src/Database/db:/var/lib/postgresql/data
      - ./src/Database/scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped

  gilgoblin-api:
    image: nickreinlein/gilgoblin-api
    container_name: api
    depends_on:
      - gilgoblin-database
    healthcheck:
      test: [ "CMD-SHELL" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gilgoblin
    ports:
      - "55448:80"
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
    restart: unless-stopped

  gilgoblin-dataupdater:
    image: nickreinlein/gilgoblin-dataupdater
    container_name: dataupdater
    depends_on:
      - gilgoblin-database
      - gilgoblin-api
    healthcheck:
      test: [ "CMD-SHELL" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gilgoblin
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
    restart: unless-stopped

  gilgoblin-accountant:
    image: nickreinlein/gilgoblin-accountant
    container_name: accountant
    depends_on:
      - gilgoblin-database
      - gilgoblin-api
    healthcheck:
      test: [ "CMD-SHELL" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gilgoblin
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
    restart: unless-stopped

  gilgoblin-frontend:
    image: nickreinlein/gilgoblin-frontend
    container_name: frontend
    ## For local testing, replace with:
    # image: frontend
    # build: src/frontend/
    depends_on:
      - gilgoblin-database
      - gilgoblin-api
    healthcheck:
      test: [ "CMD-SHELL" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gilgoblin
    ports:
      - "3000:3000"
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
    restart: unless-stopped

  ### Alerts & Monitoring ###

  gilgoblin-prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
      - --config.file=/etc/prometheus/prometheus.yml
    healthcheck:
      test: [ "CMD-SHELL" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gilgoblin
    ports:
      - "127.0.0.1:9090:9090"
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
    volumes:
      - ./benchmarks:/etc/prometheus
    restart: unless-stopped

  gilgoblin-node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    healthcheck:
      test: [ "CMD-SHELL" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
    networks:
      - gilgoblin
    ports:
      - "9100:9100"
    volumes:
      - ./benchmarks:/etc/node-exporter
    restart: unless-stopped

  gilgoblin-grafana:
    image: grafana/grafana
    container_name: grafana
    healthcheck:
      test: [ "CMD-SHELL" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
    networks:
      - gilgoblin
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    ports:
      - "55450:3000"
    volumes:
      - ./benchmarks/grafana/provisioning:/etc/grafana/provisioning/
      - ./benchmarks/grafana:/var/lib/grafana
    restart: unless-stopped

  ### Benchmarks ###

  gilgoblin-influxdb:
    image: influxdb:latest
    container_name: influxdb
    environment:
      - INFLUXDB_DB=gilgoblin_db
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=gilgoblin_password
      - INFLUXDB_DB=k6
    networks:
      - gilgoblin
    ports:
      - '8086:8086'
    volumes:
      - ./benchmarks/influxdb:/var/lib/influxdb

  gilgoblin-k6-benchmarks:
    image: grafana/k6
    container_name: k6-benchmarks
    depends_on:
      - gilgoblin-database
      - gilgoblin-api
      - gilgoblin-prometheus
    environment:
      - K6_OUT=influxdb=http://host.docker.internal:8086/k6
      - K6_PROMETHEUS_RW_SERVER_URL=http://host.docker.internal:9090/api/v1/write
      - K6_PROMETHEUS_RW_TREND_STATS=p(95),p(99),min,max
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
      - K6_INFLUXDB_ORGANIZATION=gilgoblin_org
      - K6_INFLUXDB_BUCKET=gilgoblin_bucket
      - K6_INFLUXDB_TOKEN=bA3yv1snsdTkM4xNaQTLEWgBd40YV78dmiQQs1-dBGGgYNmnpCIvkhGbJyPieCZ8wtidKq8_MG0inDxcxRDwnQ==
      - K6_INFLUXDB_ADDR=http://host.docker.internal:8086
    command: run -o experimental-prometheus-rw /scripts/crafts-benchmark.js
    networks:
      - gilgoblin
    ports:
      - "6565:6565"
    volumes:
      - ./benchmarks:/scripts
    restart: no

networks:
  gilgoblin:
